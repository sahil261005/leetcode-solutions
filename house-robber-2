class Solution:
    def rob(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return nums[0]
        if len(nums) == 2:
            return max(nums[0], nums[1])
        
        # For circular array: either rob first house OR last house, not both
        # Case 1: Rob houses 0 to n-2 (include first, exclude last)
        # Case 2: Rob houses 1 to n-1 (exclude first, include last)
        return max(self.helper(nums[:-1]), self.helper(nums[1:]))
    
    def helper(self, nums):
        if not nums:
            return 0
        if len(nums) == 1:
            return nums[0]
            
        rob1, rob2 = 0, 0
        
        for n in nums:
            newRob = max(rob1 + n, rob2)
            rob1 = rob2
            rob2 = newRob
        return rob2
