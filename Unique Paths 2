class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        M, N = len(obstacleGrid), len(obstacleGrid[0])
        
        dp = [0] * N
        dp[N-1] = 1 if obstacleGrid[M-1][N-1] == 0 else 0

        for r in reversed(range(M)):
            for c in reversed(range(N)):
                if obstacleGrid[r][c] == 1:
                    dp[c] = 0
                elif c + 1 < N:
                    dp[c] = dp[c] + dp[c+1]

        return dp[0]
